234. Palindrome Linked List
Given the head of a singly linked list, return true if it is a 
palindrome
 or false otherwise.

 

Example 1:


Input: head = [1,2,2,1]
Output: true
Example 2:


Input: head = [1,2]
Output: false
 

Constraints:

The number of nodes in the list is in the range [1, 105].
0 <= Node.val <= 9
 

Follow up: Could you do it in O(n) time and O(1) space?

----------------------------------------------------------------------
Answer:
---------------------------------------------------------------------------
-----------------------------------------------------------------------

class Solution(object):
    def isPalindrome(self, head):
        """
        :type head: ListNode
        :rtype: bool
        """
        crr = ListNode(0)
        crr.next = head

        l1  = []
        l2 = []

        while crr.next:
            l1.append(crr.next.val)
            crr = crr.next

        while head:
            l2.append(head.val)
            head = head.next

        return l1 == l2[::-1]
-----------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------

-------------------------------------------------------------------------------
