QUESTION
:
1148. Article Views I



Table: Views

+---------------+---------+
| Column Name   | Type    |
+---------------+---------+
| article_id    | int     |
| author_id     | int     |
| viewer_id     | int     |
| view_date     | date    |
+---------------+---------+
There is no primary key (column with unique values) for this table, the table may have duplicate rows.
Each row of this table indicates that some viewer viewed an article (written by some author) on some date. 
Note that equal author_id and viewer_id indicate the same person.
 

Write a solution to find all the authors that viewed at least one of their own articles.

Return the result table sorted by id in ascending order.

The result format is in the following example.

 

Example 1:

Input: 
Views table:
+------------+-----------+-----------+------------+
| article_id | author_id | viewer_id | view_date  |
+------------+-----------+-----------+------------+
| 1          | 3         | 5         | 2019-08-01 |
| 1          | 3         | 6         | 2019-08-02 |
| 2          | 7         | 7         | 2019-08-01 |
| 2          | 7         | 6         | 2019-08-02 |
| 4          | 7         | 1         | 2019-07-22 |
| 3          | 4         | 4         | 2019-07-21 |
| 3          | 4         | 4         | 2019-07-21 |
+------------+-----------+-----------+------------+
Output: 
+------+
| id   |
+------+
| 4    |
| 7    |
+------+





ANSWER1 :
#Approach 1 : Simple WHERE
SELECT viewer_id AS id FROM Views
WHERE author_id=viewer_id
GROUP BY viewer_id
ORDER BY id ASC;


ANSWER 2:
#Approach 2 :  Subquery
SELECT DISTINCT author_id AS id
FROM Views
WHERE author_id IN (SELECT viewer_id FROM Views WHERE author_id = viewer_id)
ORDER BY id ASC;



ANSWER3:
#Approach 3 : Join
SELECT DISTINCT V1.author_id AS id
FROM Views V1
JOIN Views V2 ON V1.author_id = V2.viewer_id
AND V1.author_id = V2.author_id
ORDER BY id ASC;

